%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.60.1 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 342 196
%%HiResBoundingBox: 0 0 342 196
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F9_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 342 196 re
W
q
q
[1 0 0 1 -1 -20] cm
q
[1 0 0 1 0 0] cm
0 0 360 226 re
W
q
[0.1 0 0 0.1 0 0] cm
2.5 w
3.8 M
/DeviceRGB {} CS
[0 0 0] SC
521.5 1859 m
490 1859 l
S
521.5 1967.5 m
490 1967.5 l
S
521.5 520 m
490 520 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.6605 48.6648] Tm
0 0 Td
/F9_0 10 Tf
( 1)
[2.78
0
5.56
0] Tj
Q
521.5 761 m
490 761 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.3211 72.7648] Tm
0 0 Td
/F9_0 10 Tf
( 1.2)
[2.78
0
5.56
0
2.78
0
5.56
0] Tj
Q
521.5 1002.5 m
490 1002.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.3211 96.9148] Tm
0 0 Td
/F9_0 10 Tf
( 1.4)
[2.78
0
5.56
0
2.78
0
5.56
0] Tj
Q
521.5 1243.5 m
490 1243.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.3211 121.015] Tm
0 0 Td
/F9_0 10 Tf
( 1.6)
[2.78
0
5.56
0
2.78
0
5.56
0] Tj
Q
521.5 1485 m
490 1485 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.3211 145.165] Tm
0 0 Td
/F9_0 10 Tf
( 1.8)
[2.78
0
5.56
0
2.78
0
5.56
0] Tj
Q
521.5 1726 m
490 1726 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.6605 169.265] Tm
0 0 Td
/F9_0 10 Tf
( 2)
[2.78
0
5.56
0] Tj
Q
521.5 1967.5 m
490 1967.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 87.7207 38.6648] Tm
0 0 Td
/F9_0 10 Tf
(0.03)
[5.56
0
2.78
0
5.56
0
5.56
0] Tj
-2856.97 TJm
(0.1)
[5.56
0
2.78
0
5.56
0] Tj
-3140 TJm
(0.3)
[5.56
0
2.78
0
5.56
0] Tj
-3556.99 TJm
(1)
[5.56
0] Tj
-3969 TJm
(3)
[5.56
0] Tj
-3695.99 TJm
(10)
[5.56
0
5.56
0] Tj
Q
5 w
521.5 520 2898 1447.5 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.2 198.215] Tm
0 0 Td
/F9_0 10 Tf
(INF)
[2.78
0
7.22
0
6.11
0] Tj
5.4 -15.1 Td
(.)
[2.78
0] Tj
5.4 -12.6 Td
(.)
[2.78
0] Tj
5.4 -10.05 Td
(.)
[2.78
0] Tj
[0 1 -1 0 12.3352 94.6164] Tm
0 0 Td
/F9_0 10 Tf
(Solution Cost)
[6.67
0
5.56
0
2.22
0
5.56
0
2.78
0
2.22
0
5.56
0
5.56
0
2.78
0
7.22
0
5.56
0
5
0
2.78
0] Tj
[1 0 0 1 174.556 23.6648] Tm
0 0 Td
/F9_0 10 Tf
(Time \(ms\))
[6.11
0
2.22
0
8.33
0
5.56
0
2.78
0
3.33
0
8.33
0
5
0
3.33
0] Tj
-91.9813 184.75 Td
(Anytime Search: Solution Cost \(hrt201n, RANDOM\))
[6.67
0
5.56
0
5
0
2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
6.67
0
5.56
0
5.56
0
3.33
0
5
0
5.56
0
2.78
0
2.78
0
6.67
0
5.56
0
2.22
0
5.56
0
2.78
0
2.22
0
5.56
0
5.56
0
2.78
0
7.22
0
5.56
0
5
0
2.78
0
2.78
0
3.33
0
5.56
0
3.33
0
2.78
0
5.56
0
5.56
0
5.56
0
5.56
0
2.78
0
2.78
0
7.22
0
6.67
0
7.22
0
7.22
0
7.78
0
8.33
0
3.33
0] Tj
-17.2411 161.6 Td
(Anytime Weighted CPD Search)
[6.67
0
5.56
0
5
0
2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
9.44
0
5.56
0
2.22
0
5.56
0
5.56
0
2.78
0
5.56
0
5.56
0
2.78
0
7.22
0
6.67
0
7.22
0
2.78
0
6.67
0
5.56
0
5.56
0
3.33
0
5
0
5.56
0] Tj
Q
/DeviceRGB {} CS
[0.6699 0.6699 0.6699] SC
3028 1861 271.5 50 re
S
820.5 922.5 91 1045 re
S
866 520 m
866 922.5 l
820.5 520 m
911.5 520 l
S
1273 732.5 91 183 re
S
1318.5 520 m
1318.5 732.5 l
1318.5 915.5 m
1318.5 1967.5 l
1273 520 m
1364 520 l
S
1726 586 91 162.5 re
S
1771.5 520 m
1771.5 586 l
1771.5 748.5 m
1771.5 1967.5 l
1726 520 m
1817 520 l
S
2179 537.5 91 67 re
S
2224.5 520 m
2224.5 537.5 l
2224.5 604.5 m
2224.5 876.5 l
2179 876.5 m
2270 876.5 l
2179 520 m
2270 520 l
S
2631.5 520 91 60.5 re
S
2677 580.5 m
2677 622 l
2631.5 622 m
2722.5 622 l
2631.5 520 m
2722.5 520 l
S
3084.5 520 91 29.5 re
S
3130 549.5 m
3130 597 l
3084.5 597 m
3175.5 597 l
3084.5 520 m
3175.5 520 l
S
1273 859 m
1364 859 l
1273 859 l
h
S
1726 641 m
1817 641 l
1726 641 l
h
S
2179 586.5 m
2270 586.5 l
2179 586.5 l
h
S
2631.5 558 m
2722.5 558 l
2631.5 558 l
h
S
3084.5 520 m
3175.5 520 l
3084.5 520 l
h
S
/DeviceRGB {} CS
[0.5293 0.5293 0.5293] SC
2200.38 600.125 m
2247.63 552.875 l
S
2200.38 552.875 m
2247.63 600.125 l
S
2653.38 577.625 m
2700.63 530.375 l
S
2653.38 530.375 m
2700.63 577.625 l
S
3105.88 557.625 m
3153.13 510.375 l
S
3105.88 510.375 m
3153.13 557.625 l
S
889.125 1685 m
889.125 1698.05 878.547 1708.63 865.5 1708.63 c
852.453 1708.63 841.875 1698.05 841.875 1685 c
841.875 1671.95 852.453 1661.38 865.5 1661.38 c
878.547 1661.38 889.125 1671.95 889.125 1685 c
S
1 J
865.5 1685 m
865.5 1685 l
S
0 J
1342.13 1122.5 m
1342.13 1135.55 1331.55 1146.13 1318.5 1146.13 c
1305.45 1146.13 1294.88 1135.55 1294.88 1122.5 c
1294.88 1109.45 1305.45 1098.88 1318.5 1098.88 c
1331.55 1098.88 1342.13 1109.45 1342.13 1122.5 c
S
1 J
1318.5 1122.5 m
1318.5 1122.5 l
S
0 J
1795.13 986.5 m
1795.13 999.547 1784.55 1010.13 1771.5 1010.13 c
1758.45 1010.13 1747.88 999.547 1747.88 986.5 c
1747.88 973.453 1758.45 962.875 1771.5 962.875 c
1784.55 962.875 1795.13 973.453 1795.13 986.5 c
S
1 J
1771.5 986.5 m
1771.5 986.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 202.333 175.265] Tm
0 0 Td
/F9_0 10 Tf
(Anytime CPD Search)
[6.67
0
5.56
0
5
0
2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
7.22
0
6.67
0
7.22
0
2.78
0
6.67
0
5.56
0
5.56
0
3.33
0
5
0
5.56
0] Tj
Q
0 J
/DeviceRGB {} CS
[0 0 0] SC
3028 1761 271.5 50 re
S
929 920.5 91 1047 re
S
974.5 520 m
974.5 920.5 l
929 520 m
1020 520 l
S
1382 780 91 143 re
S
1427.5 520 m
1427.5 780 l
1427.5 923 m
1427.5 1967.5 l
1382 520 m
1473 520 l
S
1834.5 588 91 254.5 re
S
1880 520 m
1880 588 l
1880 842.5 m
1880 1967.5 l
1834.5 520 m
1925.5 520 l
S
2287.5 520 91 168.5 re
S
2333 688.5 m
2333 901 l
2287.5 901 m
2378.5 901 l
2287.5 520 m
2378.5 520 l
S
2740.5 520 m
2831.5 520 l
2740.5 520 l
h
S
2786 520 m
2786 690 l
2740.5 690 m
2831.5 690 l
2740.5 520 m
2831.5 520 l
S
3193 520 m
3284 520 l
3193 520 l
h
S
3193 520 m
3284 520 l
3193 520 m
3284 520 l
S
1382 875 m
1473 875 l
1382 875 l
h
S
1834.5 777.5 m
1925.5 777.5 l
1834.5 777.5 l
h
S
2287.5 544 m
2378.5 544 l
2287.5 544 l
h
S
2740.5 520 m
2831.5 520 l
2740.5 520 l
h
S
3193 520 m
3284 520 l
3193 520 l
h
S
2309.38 625.125 m
2356.63 577.875 l
S
2309.38 577.875 m
2356.63 625.125 l
S
2761.88 546.625 m
2809.13 499.375 l
S
2761.88 499.375 m
2809.13 546.625 l
S
3214.88 543.625 m
3262.13 496.375 l
S
3214.88 496.375 m
3262.13 543.625 l
S
998.125 1366.5 m
998.125 1379.55 987.547 1390.13 974.5 1390.13 c
961.453 1390.13 950.875 1379.55 950.875 1366.5 c
950.875 1353.45 961.453 1342.88 974.5 1342.88 c
987.547 1342.88 998.125 1353.45 998.125 1366.5 c
S
1 J
974.5 1366.5 m
974.5 1366.5 l
S
0 J
1450.63 1262.5 m
1450.63 1275.55 1440.05 1286.13 1427 1286.13 c
1413.95 1286.13 1403.38 1275.55 1403.38 1262.5 c
1403.38 1249.45 1413.95 1238.88 1427 1238.88 c
1440.05 1238.88 1450.63 1249.45 1450.63 1262.5 c
S
1 J
1427 1262.5 m
1427 1262.5 l
S
0 J
1903.63 973 m
1903.63 986.047 1893.05 996.625 1880 996.625 c
1866.95 996.625 1856.38 986.047 1856.38 973 c
1856.38 959.953 1866.95 949.375 1880 949.375 c
1893.05 949.375 1903.63 959.953 1903.63 973 c
S
1 J
1880 973 m
1880 973 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 159.546 165.265] Tm
0 0 Td
/F9_0 10 Tf
(Anytime WA* \(Landmarks [12]\))
[6.67
0
5.56
0
5
0
2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
9.44
0
6.67
0
3.89
0
2.78
0
3.33
0
5.56
0
5.56
0
5.56
0
5.56
0
8.33
0
5.56
0
3.33
0
5
0
5
0
2.78
0
2.78
0
5.56
0
5.56
0
2.78
0
3.33
0] Tj
Q
[10 15] 0 d
0 J
/DeviceRGB {} CS
[0.3301 0.3301 0.3301] SC
3028 1661 271.5 50 re
S
1083 520 m
1083 1967.5 l
1037.5 520 m
1128.5 520 l
1536 520 m
1536 1967.5 l
1490.5 520 m
1581.5 520 l
S
1943.5 623.5 91 1344 re
S
1989 520 m
1989 623.5 l
1943.5 520 m
2034.5 520 l
S
2396 575 91 77.5 re
S
2441.5 520 m
2441.5 575 l
2441.5 652.5 m
2441.5 1967.5 l
2396 520 m
2487 520 l
S
2849 520 91 103 re
S
2894.5 623 m
2894.5 748 l
2849 748 m
2940 748 l
2849 520 m
2940 520 l
S
3302 520 91 66 re
S
3347.5 586 m
3347.5 667 l
3302 667 m
3393 667 l
3302 520 m
3393 520 l
S
2396 617 m
2487 617 l
2396 617 l
h
S
2849 584.5 m
2940 584.5 l
2849 584.5 l
h
S
3302 538 m
3393 538 l
3302 538 l
h
S
[] 0 d
/DeviceRGB {} CS
[0.1299 0.1299 0.1299] SC
2870.38 606.625 m
2917.63 559.375 l
S
2870.38 559.375 m
2917.63 606.625 l
S
3323.38 578.125 m
3370.63 530.875 l
S
3323.38 530.875 m
3370.63 578.125 l
S
1106.63 791.5 m
1106.63 804.547 1096.05 815.125 1083 815.125 c
1069.95 815.125 1059.38 804.547 1059.38 791.5 c
1059.38 778.453 1069.95 767.875 1083 767.875 c
1096.05 767.875 1106.63 778.453 1106.63 791.5 c
S
1 J
1083 791.5 m
1083 791.5 l
S
0 J
1559.63 1242.5 m
1559.63 1255.55 1549.05 1266.13 1536 1266.13 c
1522.95 1266.13 1512.38 1255.55 1512.38 1242.5 c
1512.38 1229.45 1522.95 1218.88 1536 1218.88 c
1549.05 1218.88 1559.63 1229.45 1559.63 1242.5 c
S
1 J
1536 1242.5 m
1536 1242.5 l
S
0 J
2012.13 818 m
2012.13 831.047 2001.55 841.625 1988.5 841.625 c
1975.45 841.625 1964.88 831.047 1964.88 818 c
1964.88 804.953 1975.45 794.375 1988.5 794.375 c
2001.55 794.375 2012.13 804.953 2012.13 818 c
S
1 J
1988.5 818 m
1988.5 818 l
S
0 J
2465.13 769 m
2465.13 782.047 2454.55 792.625 2441.5 792.625 c
2428.45 792.625 2417.88 782.047 2417.88 769 c
2417.88 755.953 2428.45 745.375 2441.5 745.375 c
2454.55 745.375 2465.13 755.953 2465.13 769 c
S
1 J
2441.5 769 m
2441.5 769 l
S
0 J
/DeviceRGB {} CS
[0 0 0] SC
521.5 520 2898 1447.5 re
S
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
